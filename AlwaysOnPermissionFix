--Replace login_name with Control+H

ALTER AUTHORIZATION ON ENDPOINT::Hadr_endpoint TO sa
GO

DECLARE @svcaccount nvarchar(50), @sqlcommand nvarchar(500)
SELECT @svcaccount = service_account FROM sys.dm_server_services WHERE servicename LIKE 'SQL Server (%)'
SELECT @svcaccount = '[' + @svcaccount + ']'
SELECT @sqlcommand = 'ALTER SERVER ROLE [sysadmin] ADD MEMBER ' + @svcaccount + ';'
EXEC sp_executesql @sqlcommand
SELECT @sqlcommand = 'GRANT CONNECT ON ENDPOINT::Hadr_endpoint TO ' + @svcaccount + ';'
EXEC sp_executesql @sqlcommand
GO

DECLARE @sqlcommand NVARCHAR(500)
DECLARE crsr CURSOR FOR
----------------------------------
SELECT 'ALTER AUTHORIZATION ON AVAILABILITY GROUP::[' + name + '] TO sa;' FROM sys.availability_groups 
----------------------------------
OPEN crsr
FETCH NEXT FROM crsr INTO @sqlcommand
WHILE @@FETCH_STATUS = 0
BEGIN
----------------------------------
EXEC sp_executesql @sqlcommand
----------------------------------
FETCH NEXT FROM crsr INTO @sqlcommand
END
CLOSE crsr
DEALLOCATE crsr


/*** Automatically Kill Sessions with Cursor (Carefully Specify Where Condition) ***
DECLARE @sqlcommand2 NVARCHAR(500)
DECLARE crsr CURSOR FOR
----------------------------------
SELECT
	'kill ' + CAST([spid] AS VARCHAR(10)) AS [KillCommand]
FROM [master].[dbo].[sysprocesses] sp 
JOIN [master].[dbo].[sysdatabases] sd ON sp.[dbid] = sd.[dbid]
WHERE RTRIM([loginame]) = N'login_name'
----------------------------------
OPEN crsr
FETCH NEXT FROM crsr INTO @sqlcommand2
WHILE @@FETCH_STATUS = 0
BEGIN
----------------------------------
	EXEC sp_executesql @sqlcommand2
----------------------------------
FETCH NEXT FROM crsr INTO @sqlcommand2
END
CLOSE crsr
DEALLOCATE crsr
*/

/*** If owns many databases, change owner to sa user ***
EXEC sp_msforeachdb '
IF ''?'' NOT IN (''master'',''model'',''msdb'',''tempdb'')
BEGIN
USE [?]
EXEC dbo.sp_changedbowner @loginame = N''sa''
END
'
*/

DROP LOGIN [login_name]
GO
